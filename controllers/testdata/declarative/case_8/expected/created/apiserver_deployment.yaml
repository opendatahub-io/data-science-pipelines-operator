apiVersion: apps/v1
kind: Deployment
metadata:
  name: ds-pipeline-testdsp8
  namespace: default
  labels:
    app: ds-pipeline-testdsp8
    component: data-science-pipelines
    dspa: testdsp8
spec:
  selector:
    matchLabels:
      app: ds-pipeline-testdsp8
      component: data-science-pipelines
      dspa: testdsp8
  template:
    metadata:
      labels:
        app: ds-pipeline-testdsp8
        component: data-science-pipelines
        dspa: testdsp8
    spec:
      containers:
        - env:
            - name: POD_NAMESPACE
              value: "default"
            - name: DBCONFIG_USER
              value: "mlpipeline"
            - name: DBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: "ds-pipeline-db-testdsp8"
            - name: DBCONFIG_DBNAME
              value: "mlpipeline"
            - name: DBCONFIG_HOST
              value: "mariadb-testdsp8.default.svc.cluster.local"
            - name: DBCONFIG_PORT
              value: "3306"
            - name: ARTIFACT_COPY_STEP_CABUNDLE_CONFIGMAP_NAME
              value: dsp-trusted-ca-testdsp8
            - name: ARTIFACT_COPY_STEP_CABUNDLE_CONFIGMAP_KEY
              value: testcabundleconfigmapkey8.crt
            - name: ARTIFACT_COPY_STEP_CABUNDLE_MOUNTPATH
              value: /dsp-custom-certs
            - name: SSL_CERT_DIR
              value: "/dsp-custom-certs:/etc/ssl/certs:/etc/pki/tls/certs"
            - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
              value: "true"
            - name: DBCONFIG_CONMAXLIFETIMESEC
              value: "120"
            - name: ML_PIPELINE_VISUALIZATIONSERVER_SERVICE_HOST
              value: "ds-pipeline-visualizationserver"
            - name: ML_PIPELINE_VISUALIZATIONSERVER_SERVICE_PORT
              value: "8888"
            - name: OBJECTSTORECONFIG_CREDENTIALSSECRET
              value: "ds-pipeline-s3-testdsp8"
            - name: OBJECTSTORECONFIG_CREDENTIALSACCESSKEYKEY
              value: "accesskey"
            - name: OBJECTSTORECONFIG_CREDENTIALSSECRETKEYKEY
              value: "secretkey"
            - name: DEFAULTPIPELINERUNNERSERVICEACCOUNT
              value: "pipeline-runner-testdsp8"
            - name: OBJECTSTORECONFIG_BUCKETNAME
              value: "mlpipeline"
            - name: OBJECTSTORECONFIG_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: "accesskey"
                  name: "ds-pipeline-s3-testdsp8"
            - name: OBJECTSTORECONFIG_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: "secretkey"
                  name: "ds-pipeline-s3-testdsp8"
            - name: OBJECTSTORECONFIG_SECURE
              value: "false"
            - name: MINIO_SERVICE_SERVICE_HOST
              value: "minio-testdsp8.default.svc.cluster.local"
            - name: MINIO_SERVICE_SERVICE_PORT
              value: "9000"
            - name: V2_LAUNCHER_IMAGE
              value: "argolauncherimage:test8"
            - name: V2_DRIVER_IMAGE
              value: "argodriverimage:test8"
            - name: METADATA_GRPC_SERVICE_SERVICE_HOST
              value: "ds-pipeline-metadata-grpc-testdsp8.default.svc.cluster.local"
            - name: METADATA_GRPC_SERVICE_SERVICE_PORT
              value: "8080"
            - name: ML_PIPELINE_SERVICE_HOST
              value: ds-pipeline-testdsp8.default.svc.cluster.local
            - name: ML_PIPELINE_SERVICE_PORT_GRPC
              value: "8887"
            - name: SIGNED_URL_EXPIRY_TIME_SECONDS
              value: "60"
            - name: ML_PIPELINE_TLS_ENABLED
              value: "true"
            - name: METADATA_TLS_ENABLED
              value: "true"
            - name: EXECUTIONTYPE
              value: Workflow
            - name: DB_DRIVER_NAME
              value: mysql
            - name: DBCONFIG_MYSQLCONFIG_USER
              value: mlpipeline
            - name: DBCONFIG_MYSQLCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: "ds-pipeline-db-testdsp8"
            - name: DBCONFIG_MYSQLCONFIG_DBNAME
              value: "mlpipeline"
            - name: DBCONFIG_MYSQLCONFIG_HOST
              value: "mariadb-testdsp8.default.svc.cluster.local"
            - name: DBCONFIG_MYSQLCONFIG_PORT
              value: "3306"
          image: api-server:test8
          # imagePullPolicy: default - https://kubernetes.io/docs/concepts/containers/images/#imagepullpolicy-defaulting
          name: ds-pipeline-api-server
          command: ['/bin/apiserver']
          args:
            - --config=/config
            - -logtostderr=true
            - --tlsCertPath=/etc/tls/private/tls.crt
            - --tlsCertKeyPath=/etc/tls/private/tls.key
          ports:
            - containerPort: 8888
              name: http
              protocol: TCP
            - containerPort: 8887
              name: grpc
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /apis/v1beta1/healthz
              port: http
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /apis/v1beta1/healthz
              port: http
              scheme: HTTPS
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: server-config
              mountPath: /config/config.json
              subPath: config.json
            - mountPath: /etc/tls/private
              name: proxy-tls
            - name: ca-bundle
              mountPath: /dsp-custom-certs
        - name: oauth-proxy
          args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-service-account=ds-pipeline-testdsp8
            - --upstream=https://ds-pipeline-testdsp8.default.svc.cluster.local:8888
            - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=SECRET
            - '--openshift-delegate-urls={"/": {"group":"route.openshift.io","resource":"routes","verb":"get","name":"ds-pipeline-testdsp8","namespace":"default"}}'
            - '--openshift-sar={"namespace":"default","resource":"routes","resourceName":"ds-pipeline-testdsp8","verb":"get","resourceAPIGroup":"route.openshift.io"}'
            - --skip-auth-regex='(^/metrics|^/apis/v1beta1/healthz)'
          image: oauth-proxy:test8
          ports:
            - containerPort: 8443
              name: oauth
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: oauth
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: oauth
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: /etc/tls/private
              name: proxy-tls
      volumes:
        - name: proxy-tls
          secret:
            secretName: ds-pipelines-proxy-tls-testdsp8
            defaultMode: 420
        - name: server-config
          configMap:
            name: ds-pipeline-server-config-testdsp8
            defaultMode: 420
        - name: ca-bundle
          configMap:
            name: dsp-trusted-ca-testdsp8
            defaultMode: 420
      serviceAccountName: ds-pipeline-testdsp8
